open Stdlib

type List a =
     | Nil
     | Cons a (List a)

let rec map f x : forall q w, (q -> w) -> List q -> List w =
    match x with
    | 'Nil => Nil
    | Cons q w => Cons (f q) (map f w)
    end

let rec make i : int -> List int =
    if i = 0 then
       Nil
    else
       Cons i (make (i - 1))

let main q : () -> () =
    let l = make 1000 in
    let p = map print_int l in
    ()

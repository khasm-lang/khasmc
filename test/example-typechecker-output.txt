ECK
    (Base (Ident "_Kshow"))
    ∀a, (a) -> (())
        INFER
        (Base (Ident "_Kshow"))
        INFER RES:
        (Base (Ident "_Kshow"))
        :
        ∀6_t, (6_t) -> (())
        UNIFY
        ∀6_t, (6_t) -> (())
        ∀a, (a) -> (())
        FORALL
            UNIFY
            ($m0) -> (())
            (a) -> (())
            MAP
                UNIFY
                $m0
                a
                META
                UNIFY RESULT:
                { metas = [("$m0", (TSBase "a"))] }
                a
                UNIFY
                ()
                ()
                BOT
                UNIFY RESULT:
                { metas = [] }
                ()
            UNIFY RESULT:
            { metas = [("$m0", (TSBase "a"))] }
            (a) -> (())
        UNIFY RESULT:
        { metas = [("$m0", (TSBase "a"))] }
        ∀6_t, (a) -> (())
 CHECK END
    CHECK
    (Base (Ident "_Kadd"))
    ∀a, (a) -> ((a) -> (a))
        INFER
        (Base (Ident "_Kadd"))
        INFER RES:
        (Base (Ident "_Kadd"))
        :
        ∀0_t, (0_t) -> ((0_t) -> (0_t))
        UNIFY
        ∀0_t, (0_t) -> ((0_t) -> (0_t))
        ∀a, (a) -> ((a) -> (a))
        FORALL
            UNIFY
            ($m1) -> (($m1) -> ($m1))
            (a) -> ((a) -> (a))
            MAP
                UNIFY
                $m1
                a
                META
                UNIFY RESULT:
                { metas = [("$m1", (TSBase "a"))] }
                a
                UNIFY
                ($m1) -> ($m1)
                (a) -> (a)
                MAP
                    UNIFY
                    $m1
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m1", (TSBase "a"))] }
                    a
                    UNIFY
                    $m1
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m1", (TSBase "a"))] }
                    a
                UNIFY RESULT:
                { metas = [("$m1", (TSBase "a"))] }
                (a) -> (a)
            UNIFY RESULT:
            { metas = [("$m1", (TSBase "a"))] }
            (a) -> ((a) -> (a))
        UNIFY RESULT:
        { metas = [("$m1", (TSBase "a"))] }
        ∀0_t, (a) -> ((a) -> (a))
 CHECK END
    CHECK
    (Base (Ident "_Ksub"))
    ∀a, (a) -> ((a) -> (a))
        INFER
        (Base (Ident "_Ksub"))
        INFER RES:
        (Base (Ident "_Ksub"))
        :
        ∀1_t, (1_t) -> ((1_t) -> (1_t))
        UNIFY
        ∀1_t, (1_t) -> ((1_t) -> (1_t))
        ∀a, (a) -> ((a) -> (a))
        FORALL
            UNIFY
            ($m2) -> (($m2) -> ($m2))
            (a) -> ((a) -> (a))
            MAP
                UNIFY
                $m2
                a
                META
                UNIFY RESULT:
                { metas = [("$m2", (TSBase "a"))] }
                a
                UNIFY
                ($m2) -> ($m2)
                (a) -> (a)
                MAP
                    UNIFY
                    $m2
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m2", (TSBase "a"))] }
                    a
                    UNIFY
                    $m2
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m2", (TSBase "a"))] }
                    a
                UNIFY RESULT:
                { metas = [("$m2", (TSBase "a"))] }
                (a) -> (a)
            UNIFY RESULT:
            { metas = [("$m2", (TSBase "a"))] }
            (a) -> ((a) -> (a))
        UNIFY RESULT:
        { metas = [("$m2", (TSBase "a"))] }
        ∀1_t, (a) -> ((a) -> (a))
 CHECK END
    CHECK
    (Base (Ident "_Kdiv"))
    ∀a, (a) -> ((a) -> (a))
        INFER
        (Base (Ident "_Kdiv"))
        INFER RES:
        (Base (Ident "_Kdiv"))
        :
        ∀2_t, (2_t) -> ((2_t) -> (2_t))
        UNIFY
        ∀2_t, (2_t) -> ((2_t) -> (2_t))
        ∀a, (a) -> ((a) -> (a))
        FORALL
            UNIFY
            ($m3) -> (($m3) -> ($m3))
            (a) -> ((a) -> (a))
            MAP
                UNIFY
                $m3
                a
                META
                UNIFY RESULT:
                { metas = [("$m3", (TSBase "a"))] }
                a
                UNIFY
                ($m3) -> ($m3)
                (a) -> (a)
                MAP
                    UNIFY
                    $m3
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m3", (TSBase "a"))] }
                    a
                    UNIFY
                    $m3
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m3", (TSBase "a"))] }
                    a
                UNIFY RESULT:
                { metas = [("$m3", (TSBase "a"))] }
                (a) -> (a)
            UNIFY RESULT:
            { metas = [("$m3", (TSBase "a"))] }
            (a) -> ((a) -> (a))
        UNIFY RESULT:
        { metas = [("$m3", (TSBase "a"))] }
        ∀2_t, (a) -> ((a) -> (a))
 CHECK END
    CHECK
    (Base (Ident "_Kmul"))
    ∀a, (a) -> ((a) -> (a))
        INFER
        (Base (Ident "_Kmul"))
        INFER RES:
        (Base (Ident "_Kmul"))
        :
        ∀3_t, (3_t) -> ((3_t) -> (3_t))
        UNIFY
        ∀3_t, (3_t) -> ((3_t) -> (3_t))
        ∀a, (a) -> ((a) -> (a))
        FORALL
            UNIFY
            ($m4) -> (($m4) -> ($m4))
            (a) -> ((a) -> (a))
            MAP
                UNIFY
                $m4
                a
                META
                UNIFY RESULT:
                { metas = [("$m4", (TSBase "a"))] }
                a
                UNIFY
                ($m4) -> ($m4)
                (a) -> (a)
                MAP
                    UNIFY
                    $m4
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m4", (TSBase "a"))] }
                    a
                    UNIFY
                    $m4
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m4", (TSBase "a"))] }
                    a
                UNIFY RESULT:
                { metas = [("$m4", (TSBase "a"))] }
                (a) -> (a)
            UNIFY RESULT:
            { metas = [("$m4", (TSBase "a"))] }
            (a) -> ((a) -> (a))
        UNIFY RESULT:
        { metas = [("$m4", (TSBase "a"))] }
        ∀3_t, (a) -> ((a) -> (a))
 CHECK END
    CHECK
    (Base (Ident "_Kpow"))
    ∀a, (a) -> ((a) -> (a))
        INFER
        (Base (Ident "_Kpow"))
        INFER RES:
        (Base (Ident "_Kpow"))
        :
        ∀4_t, (4_t) -> ((4_t) -> (4_t))
        UNIFY
        ∀4_t, (4_t) -> ((4_t) -> (4_t))
        ∀a, (a) -> ((a) -> (a))
        FORALL
            UNIFY
            ($m5) -> (($m5) -> ($m5))
            (a) -> ((a) -> (a))
            MAP
                UNIFY
                $m5
                a
                META
                UNIFY RESULT:
                { metas = [("$m5", (TSBase "a"))] }
                a
                UNIFY
                ($m5) -> ($m5)
                (a) -> (a)
                MAP
                    UNIFY
                    $m5
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m5", (TSBase "a"))] }
                    a
                    UNIFY
                    $m5
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m5", (TSBase "a"))] }
                    a
                UNIFY RESULT:
                { metas = [("$m5", (TSBase "a"))] }
                (a) -> (a)
            UNIFY RESULT:
            { metas = [("$m5", (TSBase "a"))] }
            (a) -> ((a) -> (a))
        UNIFY RESULT:
        { metas = [("$m5", (TSBase "a"))] }
        ∀4_t, (a) -> ((a) -> (a))
 CHECK END
    CHECK
    (Base (Ident "_Keq"))
    ∀a, (a) -> ((a) -> (bool))
        INFER
        (Base (Ident "_Keq"))
        INFER RES:
        (Base (Ident "_Keq"))
        :
        ∀5_t, (5_t) -> ((5_t) -> (bool))
        UNIFY
        ∀5_t, (5_t) -> ((5_t) -> (bool))
        ∀a, (a) -> ((a) -> (bool))
        FORALL
            UNIFY
            ($m6) -> (($m6) -> (bool))
            (a) -> ((a) -> (bool))
            MAP
                UNIFY
                $m6
                a
                META
                UNIFY RESULT:
                { metas = [("$m6", (TSBase "a"))] }
                a
                UNIFY
                ($m6) -> (bool)
                (a) -> (bool)
                MAP
                    UNIFY
                    $m6
                    a
                    META
                    UNIFY RESULT:
                    { metas = [("$m6", (TSBase "a"))] }
                    a
                    UNIFY
                    bool
                    bool
                    BASE
                    UNIFY RESULT:
                    { metas = [] }
                    bool
                UNIFY RESULT:
                { metas = [("$m6", (TSBase "a"))] }
                (a) -> (bool)
            UNIFY RESULT:
            { metas = [("$m6", (TSBase "a"))] }
            (a) -> ((a) -> (bool))
        UNIFY RESULT:
        { metas = [("$m6", (TSBase "a"))] }
        ∀5_t, (a) -> ((a) -> (bool))
 CHECK END
    CHECK
    (TypeLam ("a",
       (TypeLam ("b",
          (AnnotLam ("x", (TSBase "a"),
             (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
             ))
          ))
       ))
    ∀a, ∀b, (a) -> (((a) -> (b)) -> (b))
        CHECK
        (TypeLam ("b",
           (AnnotLam ("x", (TSBase "a"),
              (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                 (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
              ))
           ))
        ∀b, (a) -> (((a) -> (b)) -> (b))
            CHECK
            (AnnotLam ("x", (TSBase "a"),
               (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                  (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
               ))
            (a) -> (((a) -> (b)) -> (b))
                INFER
                (AnnotLam ("x", (TSBase "a"),
                   (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                      (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                   ))
                    INFER
                    (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                       (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                        INFER
                        (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                        FCALL
                        (Base (Ident "f"))
                        (Base (Ident "x"))
                            INFER
                            (Base (Ident "f"))
                            INFER RES:
                            (Base (Ident "f"))
                            :
                            (a) -> (b)
                            INFER
                            (Base (Ident "x"))
                            INFER RES:
                            (Base (Ident "x"))
                            :
                            a
                        INST r. : (a) -> (b)
                        INST l. : a
                            UNIFY
                            a
                            a
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            a
                        INFER RES:
                        (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                        :
                        b
                    INFER RES:
                    (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                       (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                    :
                    ((a) -> (b)) -> (b)
                INFER RES:
                (AnnotLam ("x", (TSBase "a"),
                   (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                      (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                   ))
                :
                (a) -> (((a) -> (b)) -> (b))
                UNIFY
                (a) -> (((a) -> (b)) -> (b))
                (a) -> (((a) -> (b)) -> (b))
                MAP
                    UNIFY
                    a
                    a
                    BASE
                    UNIFY RESULT:
                    { metas = [] }
                    a
                    UNIFY
                    ((a) -> (b)) -> (b)
                    ((a) -> (b)) -> (b)
                    MAP
                        UNIFY
                        (a) -> (b)
                        (a) -> (b)
                        MAP
                            UNIFY
                            a
                            a
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            a
                            UNIFY
                            b
                            b
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            b
                        UNIFY RESULT:
                        { metas = [] }
                        (a) -> (b)
                        UNIFY
                        b
                        b
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        b
                    UNIFY RESULT:
                    { metas = [] }
                    ((a) -> (b)) -> (b)
                UNIFY RESULT:
                { metas = [] }
                (a) -> (((a) -> (b)) -> (b))
         CHECK END
     CHECK END
 CHECK END
    CHECK
    (TypeLam ("a",
       (TypeLam ("b",
          (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
             (AnnotLam ("x", (TSBase "a"),
                (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
             ))
          ))
       ))
    ∀a, ∀b, ((a) -> (b)) -> ((a) -> (b))
        CHECK
        (TypeLam ("b",
           (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
              (AnnotLam ("x", (TSBase "a"),
                 (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
              ))
           ))
        ∀b, ((a) -> (b)) -> ((a) -> (b))
            CHECK
            (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
               (AnnotLam ("x", (TSBase "a"),
                  (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
               ))
            ((a) -> (b)) -> ((a) -> (b))
                INFER
                (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                   (AnnotLam ("x", (TSBase "a"),
                      (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                   ))
                    INFER
                    (AnnotLam ("x", (TSBase "a"),
                       (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                        INFER
                        (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                        FCALL
                        (Base (Ident "f"))
                        (Base (Ident "x"))
                            INFER
                            (Base (Ident "f"))
                            INFER RES:
                            (Base (Ident "f"))
                            :
                            (a) -> (b)
                            INFER
                            (Base (Ident "x"))
                            INFER RES:
                            (Base (Ident "x"))
                            :
                            a
                        INST r. : (a) -> (b)
                        INST l. : a
                            UNIFY
                            a
                            a
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            a
                        INFER RES:
                        (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                        :
                        b
                    INFER RES:
                    (AnnotLam ("x", (TSBase "a"),
                       (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                    :
                    (a) -> (b)
                INFER RES:
                (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                   (AnnotLam ("x", (TSBase "a"),
                      (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                   ))
                :
                ((a) -> (b)) -> ((a) -> (b))
                UNIFY
                ((a) -> (b)) -> ((a) -> (b))
                ((a) -> (b)) -> ((a) -> (b))
                MAP
                    UNIFY
                    (a) -> (b)
                    (a) -> (b)
                    MAP
                        UNIFY
                        a
                        a
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        a
                        UNIFY
                        b
                        b
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        b
                    UNIFY RESULT:
                    { metas = [] }
                    (a) -> (b)
                    UNIFY
                    (a) -> (b)
                    (a) -> (b)
                    MAP
                        UNIFY
                        a
                        a
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        a
                        UNIFY
                        b
                        b
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        b
                    UNIFY RESULT:
                    { metas = [] }
                    (a) -> (b)
                UNIFY RESULT:
                { metas = [] }
                ((a) -> (b)) -> ((a) -> (b))
         CHECK END
     CHECK END
 CHECK END
    CHECK
    (TypeLam ("a",
       (TypeLam ("b",
          (TypeLam ("c",
             (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                   (AnnotLam ("x", (TSBase "a"),
                      (FCall ((Base (Ident "f")),
                         (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                      ))
                   ))
                ))
             ))
          ))
       ))
    ∀a, ∀b, ∀c, ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
        CHECK
        (TypeLam ("b",
           (TypeLam ("c",
              (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                 (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                    (AnnotLam ("x", (TSBase "a"),
                       (FCall ((Base (Ident "f")),
                          (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                       ))
                    ))
                 ))
              ))
           ))
        ∀b, ∀c, ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
            CHECK
            (TypeLam ("c",
               (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                  (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                     (AnnotLam ("x", (TSBase "a"),
                        (FCall ((Base (Ident "f")),
                           (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                        ))
                     ))
                  ))
               ))
            ∀c, ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
                CHECK
                (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                   (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                      (AnnotLam ("x", (TSBase "a"),
                         (FCall ((Base (Ident "f")),
                            (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                         ))
                      ))
                   ))
                ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
                    INFER
                    (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                       (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                          (AnnotLam ("x", (TSBase "a"),
                             (FCall ((Base (Ident "f")),
                                (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                             ))
                          ))
                       ))
                        INFER
                        (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                           (AnnotLam ("x", (TSBase "a"),
                              (FCall ((Base (Ident "f")),
                                 (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                              ))
                           ))
                            INFER
                            (AnnotLam ("x", (TSBase "a"),
                               (FCall ((Base (Ident "f")),
                                  (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                               ))
                                INFER
                                (FCall ((Base (Ident "f")), (FCall ((Base (Ident "g")), (Base (Ident "x"))))
                                   ))
                                FCALL
                                (Base (Ident "f"))
                                (FCall ((Base (Ident "g")), (Base (Ident "x"))))
                                    INFER
                                    (Base (Ident "f"))
                                    INFER RES:
                                    (Base (Ident "f"))
                                    :
                                    (b) -> (c)
                                    INFER
                                    (FCall ((Base (Ident "g")), (Base (Ident "x"))))
                                    FCALL
                                    (Base (Ident "g"))
                                    (Base (Ident "x"))
                                        INFER
                                        (Base (Ident "g"))
                                        INFER RES:
                                        (Base (Ident "g"))
                                        :
                                        (a) -> (b)
                                        INFER
                                        (Base (Ident "x"))
                                        INFER RES:
                                        (Base (Ident "x"))
                                        :
                                        a
                                    INST r. : (a) -> (b)
                                    INST l. : a
                                        UNIFY
                                        a
                                        a
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        a
                                    INFER RES:
                                    (FCall ((Base (Ident "g")), (Base (Ident "x"))))
                                    :
                                    b
                                INST r. : (b) -> (c)
                                INST l. : b
                                    UNIFY
                                    b
                                    b
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    b
                                INFER RES:
                                (FCall ((Base (Ident "f")), (FCall ((Base (Ident "g")), (Base (Ident "x"))))
                                   ))
                                :
                                c
                            INFER RES:
                            (AnnotLam ("x", (TSBase "a"),
                               (FCall ((Base (Ident "f")),
                                  (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                               ))
                            :
                            (a) -> (c)
                        INFER RES:
                        (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                           (AnnotLam ("x", (TSBase "a"),
                              (FCall ((Base (Ident "f")),
                                 (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                              ))
                           ))
                        :
                        ((a) -> (b)) -> ((a) -> (c))
                    INFER RES:
                    (AnnotLam ("f", (TSMap ((TSBase "b"), (TSBase "c"))),
                       (AnnotLam ("g", (TSMap ((TSBase "a"), (TSBase "b"))),
                          (AnnotLam ("x", (TSBase "a"),
                             (FCall ((Base (Ident "f")),
                                (FCall ((Base (Ident "g")), (Base (Ident "x"))))))
                             ))
                          ))
                       ))
                    :
                    ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
                    UNIFY
                    ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
                    ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
                    MAP
                        UNIFY
                        (b) -> (c)
                        (b) -> (c)
                        MAP
                            UNIFY
                            b
                            b
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            b
                            UNIFY
                            c
                            c
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            c
                        UNIFY RESULT:
                        { metas = [] }
                        (b) -> (c)
                        UNIFY
                        ((a) -> (b)) -> ((a) -> (c))
                        ((a) -> (b)) -> ((a) -> (c))
                        MAP
                            UNIFY
                            (a) -> (b)
                            (a) -> (b)
                            MAP
                                UNIFY
                                a
                                a
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                a
                                UNIFY
                                b
                                b
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                b
                            UNIFY RESULT:
                            { metas = [] }
                            (a) -> (b)
                            UNIFY
                            (a) -> (c)
                            (a) -> (c)
                            MAP
                                UNIFY
                                a
                                a
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                a
                                UNIFY
                                c
                                c
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                c
                            UNIFY RESULT:
                            { metas = [] }
                            (a) -> (c)
                        UNIFY RESULT:
                        { metas = [] }
                        ((a) -> (b)) -> ((a) -> (c))
                    UNIFY RESULT:
                    { metas = [] }
                    ((b) -> (c)) -> (((a) -> (b)) -> ((a) -> (c)))
             CHECK END
         CHECK END
     CHECK END
 CHECK END
    CHECK
    (TypeLam ("a",
       (TypeLam ("b",
          (TypeLam ("c",
             (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                   (AnnotLam ("x", (TSBase "a"),
                      (FCall ((Base (Ident "g")),
                         (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                      ))
                   ))
                ))
             ))
          ))
       ))
    ∀a, ∀b, ∀c, ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
        CHECK
        (TypeLam ("b",
           (TypeLam ("c",
              (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                 (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                    (AnnotLam ("x", (TSBase "a"),
                       (FCall ((Base (Ident "g")),
                          (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                       ))
                    ))
                 ))
              ))
           ))
        ∀b, ∀c, ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
            CHECK
            (TypeLam ("c",
               (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                  (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                     (AnnotLam ("x", (TSBase "a"),
                        (FCall ((Base (Ident "g")),
                           (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                        ))
                     ))
                  ))
               ))
            ∀c, ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
                CHECK
                (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                   (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                      (AnnotLam ("x", (TSBase "a"),
                         (FCall ((Base (Ident "g")),
                            (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                         ))
                      ))
                   ))
                ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
                    INFER
                    (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                       (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                          (AnnotLam ("x", (TSBase "a"),
                             (FCall ((Base (Ident "g")),
                                (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                             ))
                          ))
                       ))
                        INFER
                        (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                           (AnnotLam ("x", (TSBase "a"),
                              (FCall ((Base (Ident "g")),
                                 (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                              ))
                           ))
                            INFER
                            (AnnotLam ("x", (TSBase "a"),
                               (FCall ((Base (Ident "g")),
                                  (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                               ))
                                INFER
                                (FCall ((Base (Ident "g")), (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                                   ))
                                FCALL
                                (Base (Ident "g"))
                                (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                                    INFER
                                    (Base (Ident "g"))
                                    INFER RES:
                                    (Base (Ident "g"))
                                    :
                                    (b) -> (c)
                                    INFER
                                    (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                                    FCALL
                                    (Base (Ident "f"))
                                    (Base (Ident "x"))
                                        INFER
                                        (Base (Ident "f"))
                                        INFER RES:
                                        (Base (Ident "f"))
                                        :
                                        (a) -> (b)
                                        INFER
                                        (Base (Ident "x"))
                                        INFER RES:
                                        (Base (Ident "x"))
                                        :
                                        a
                                    INST r. : (a) -> (b)
                                    INST l. : a
                                        UNIFY
                                        a
                                        a
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        a
                                    INFER RES:
                                    (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                                    :
                                    b
                                INST r. : (b) -> (c)
                                INST l. : b
                                    UNIFY
                                    b
                                    b
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    b
                                INFER RES:
                                (FCall ((Base (Ident "g")), (FCall ((Base (Ident "f")), (Base (Ident "x"))))
                                   ))
                                :
                                c
                            INFER RES:
                            (AnnotLam ("x", (TSBase "a"),
                               (FCall ((Base (Ident "g")),
                                  (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                               ))
                            :
                            (a) -> (c)
                        INFER RES:
                        (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                           (AnnotLam ("x", (TSBase "a"),
                              (FCall ((Base (Ident "g")),
                                 (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                              ))
                           ))
                        :
                        ((b) -> (c)) -> ((a) -> (c))
                    INFER RES:
                    (AnnotLam ("f", (TSMap ((TSBase "a"), (TSBase "b"))),
                       (AnnotLam ("g", (TSMap ((TSBase "b"), (TSBase "c"))),
                          (AnnotLam ("x", (TSBase "a"),
                             (FCall ((Base (Ident "g")),
                                (FCall ((Base (Ident "f")), (Base (Ident "x"))))))
                             ))
                          ))
                       ))
                    :
                    ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
                    UNIFY
                    ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
                    ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
                    MAP
                        UNIFY
                        (a) -> (b)
                        (a) -> (b)
                        MAP
                            UNIFY
                            a
                            a
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            a
                            UNIFY
                            b
                            b
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            b
                        UNIFY RESULT:
                        { metas = [] }
                        (a) -> (b)
                        UNIFY
                        ((b) -> (c)) -> ((a) -> (c))
                        ((b) -> (c)) -> ((a) -> (c))
                        MAP
                            UNIFY
                            (b) -> (c)
                            (b) -> (c)
                            MAP
                                UNIFY
                                b
                                b
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                b
                                UNIFY
                                c
                                c
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                c
                            UNIFY RESULT:
                            { metas = [] }
                            (b) -> (c)
                            UNIFY
                            (a) -> (c)
                            (a) -> (c)
                            MAP
                                UNIFY
                                a
                                a
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                a
                                UNIFY
                                c
                                c
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                c
                            UNIFY RESULT:
                            { metas = [] }
                            (a) -> (c)
                        UNIFY RESULT:
                        { metas = [] }
                        ((b) -> (c)) -> ((a) -> (c))
                    UNIFY RESULT:
                    { metas = [] }
                    ((a) -> (b)) -> (((b) -> (c)) -> ((a) -> (c)))
             CHECK END
         CHECK END
     CHECK END
 CHECK END
    CHECK
    (AnnotLam ("n", (TSBase "int"), (Base (Int "6"))))
    (int) -> (int)
        INFER
        (AnnotLam ("n", (TSBase "int"), (Base (Int "6"))))
            INFER
            (Base (Int "6"))
            INFER RES:
            (Base (Int "6"))
            :
            int
        INFER RES:
        (AnnotLam ("n", (TSBase "int"), (Base (Int "6"))))
        :
        (int) -> (int)
        UNIFY
        (int) -> (int)
        (int) -> (int)
        MAP
            UNIFY
            int
            int
            BASE
            UNIFY RESULT:
            { metas = [] }
            int
            UNIFY
            int
            int
            BASE
            UNIFY RESULT:
            { metas = [] }
            int
        UNIFY RESULT:
        { metas = [] }
        (int) -> (int)
 CHECK END
    CHECK
    (AnnotLam ("a", (TSBase "float"),
       (AnnotLam ("b", (TSBase "float"),
          (AnnotLam ("c", (TSBase "float"),
             (AnnotLet ("dis", (TSBase "float"),
                (FCall (
                   (FCall ((Base (Ident "**")),
                      (FCall (
                         (FCall ((Base (Ident "+")),
                            (FCall (
                               (FCall ((Base (Ident "**")), (Base (Ident "b")))),
                               (Base (Float "2.0"))))
                            )),
                         (FCall (
                            (FCall ((Base (Ident "*")),
                               (FCall (
                                  (FCall ((Base (Ident "*")),
                                     (Base (Float "4.0")))),
                                  (Base (Ident "a"))))
                               )),
                            (Base (Ident "c"))))
                         ))
                      )),
                   (Base (Float "0.5")))),
                (AnnotLet ("nb", (TSBase "float"),
                   (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                      (Base (Ident "b")))),
                   (AnnotLet ("ta", (TSBase "float"),
                      (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                         (Base (Ident "a")))),
                      (Base
                         (Tuple
                            [(FCall (
                                (FCall ((Base (Ident "/")),
                                   (FCall (
                                      (FCall ((Base (Ident "+")),
                                         (Base (Ident "nb")))),
                                      (Base (Ident "dis"))))
                                   )),
                                (Base (Ident "ta"))));
                              (FCall (
                                 (FCall ((Base (Ident "/")),
                                    (FCall (
                                       (FCall ((Base (Ident "-")),
                                          (Base (Ident "nb")))),
                                       (Base (Ident "dis"))))
                                    )),
                                 (Base (Ident "ta"))))
                              ]))
                      ))
                   ))
                ))
             ))
          ))
       ))
    (float) -> ((float) -> ((float) -> ((float, float))))
        INFER
        (AnnotLam ("a", (TSBase "float"),
           (AnnotLam ("b", (TSBase "float"),
              (AnnotLam ("c", (TSBase "float"),
                 (AnnotLet ("dis", (TSBase "float"),
                    (FCall (
                       (FCall ((Base (Ident "**")),
                          (FCall (
                             (FCall ((Base (Ident "+")),
                                (FCall (
                                   (FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                   (Base (Float "2.0"))))
                                )),
                             (FCall (
                                (FCall ((Base (Ident "*")),
                                   (FCall (
                                      (FCall ((Base (Ident "*")),
                                         (Base (Float "4.0")))),
                                      (Base (Ident "a"))))
                                   )),
                                (Base (Ident "c"))))
                             ))
                          )),
                       (Base (Float "0.5")))),
                    (AnnotLet ("nb", (TSBase "float"),
                       (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                          (Base (Ident "b")))),
                       (AnnotLet ("ta", (TSBase "float"),
                          (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                             (Base (Ident "a")))),
                          (Base
                             (Tuple
                                [(FCall (
                                    (FCall ((Base (Ident "/")),
                                       (FCall (
                                          (FCall ((Base (Ident "+")),
                                             (Base (Ident "nb")))),
                                          (Base (Ident "dis"))))
                                       )),
                                    (Base (Ident "ta"))));
                                  (FCall (
                                     (FCall ((Base (Ident "/")),
                                        (FCall (
                                           (FCall ((Base (Ident "-")),
                                              (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                        )),
                                     (Base (Ident "ta"))))
                                  ]))
                          ))
                       ))
                    ))
                 ))
              ))
           ))
            INFER
            (AnnotLam ("b", (TSBase "float"),
               (AnnotLam ("c", (TSBase "float"),
                  (AnnotLet ("dis", (TSBase "float"),
                     (FCall (
                        (FCall ((Base (Ident "**")),
                           (FCall (
                              (FCall ((Base (Ident "+")),
                                 (FCall (
                                    (FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                    (Base (Float "2.0"))))
                                 )),
                              (FCall (
                                 (FCall ((Base (Ident "*")),
                                    (FCall (
                                       (FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                       (Base (Ident "a"))))
                                    )),
                                 (Base (Ident "c"))))
                              ))
                           )),
                        (Base (Float "0.5")))),
                     (AnnotLet ("nb", (TSBase "float"),
                        (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                           (Base (Ident "b")))),
                        (AnnotLet ("ta", (TSBase "float"),
                           (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                              (Base (Ident "a")))),
                           (Base
                              (Tuple
                                 [(FCall (
                                     (FCall ((Base (Ident "/")),
                                        (FCall (
                                           (FCall ((Base (Ident "+")),
                                              (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                        )),
                                     (Base (Ident "ta"))));
                                   (FCall (
                                      (FCall ((Base (Ident "/")),
                                         (FCall (
                                            (FCall ((Base (Ident "-")),
                                               (Base (Ident "nb")))),
                                            (Base (Ident "dis"))))
                                         )),
                                      (Base (Ident "ta"))))
                                   ]))
                           ))
                        ))
                     ))
                  ))
               ))
                INFER
                (AnnotLam ("c", (TSBase "float"),
                   (AnnotLet ("dis", (TSBase "float"),
                      (FCall (
                         (FCall ((Base (Ident "**")),
                            (FCall (
                               (FCall ((Base (Ident "+")),
                                  (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                     (Base (Float "2.0"))))
                                  )),
                               (FCall (
                                  (FCall ((Base (Ident "*")),
                                     (FCall (
                                        (FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                        (Base (Ident "a"))))
                                     )),
                                  (Base (Ident "c"))))
                               ))
                            )),
                         (Base (Float "0.5")))),
                      (AnnotLet ("nb", (TSBase "float"),
                         (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                            (Base (Ident "b")))),
                         (AnnotLet ("ta", (TSBase "float"),
                            (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                               (Base (Ident "a")))),
                            (Base
                               (Tuple
                                  [(FCall (
                                      (FCall ((Base (Ident "/")),
                                         (FCall (
                                            (FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                            (Base (Ident "dis"))))
                                         )),
                                      (Base (Ident "ta"))));
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall (
                                             (FCall ((Base (Ident "-")), (Base (Ident "nb"))
                                                )),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    ]))
                            ))
                         ))
                      ))
                   ))
                    INFER
                    (AnnotLet ("dis", (TSBase "float"),
                       (FCall (
                          (FCall ((Base (Ident "**")),
                             (FCall (
                                (FCall ((Base (Ident "+")),
                                   (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                      (Base (Float "2.0"))))
                                   )),
                                (FCall (
                                   (FCall ((Base (Ident "*")),
                                      (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                         (Base (Ident "a"))))
                                      )),
                                   (Base (Ident "c"))))
                                ))
                             )),
                          (Base (Float "0.5")))),
                       (AnnotLet ("nb", (TSBase "float"),
                          (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                             (Base (Ident "b")))),
                          (AnnotLet ("ta", (TSBase "float"),
                             (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                (Base (Ident "a")))),
                             (Base
                                (Tuple
                                   [(FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall (
                                             (FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))));
                                     (FCall (
                                        (FCall ((Base (Ident "/")),
                                           (FCall (
                                              (FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           )),
                                        (Base (Ident "ta"))))
                                     ]))
                             ))
                          ))
                       ))
                        CHECK
                        (FCall (
                           (FCall ((Base (Ident "**")),
                              (FCall (
                                 (FCall ((Base (Ident "+")),
                                    (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                       (Base (Float "2.0"))))
                                    )),
                                 (FCall (
                                    (FCall ((Base (Ident "*")),
                                       (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                          (Base (Ident "a"))))
                                       )),
                                    (Base (Ident "c"))))
                                 ))
                              )),
                           (Base (Float "0.5"))))
                        float
                            INFER
                            (FCall (
                               (FCall ((Base (Ident "**")),
                                  (FCall (
                                     (FCall ((Base (Ident "+")),
                                        (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                           (Base (Float "2.0"))))
                                        )),
                                     (FCall (
                                        (FCall ((Base (Ident "*")),
                                           (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                              (Base (Ident "a"))))
                                           )),
                                        (Base (Ident "c"))))
                                     ))
                                  )),
                               (Base (Float "0.5"))))
                            FCALL
                            (FCall ((Base (Ident "**")),
                               (FCall (
                                  (FCall ((Base (Ident "+")),
                                     (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                        (Base (Float "2.0"))))
                                     )),
                                  (FCall (
                                     (FCall ((Base (Ident "*")),
                                        (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                           (Base (Ident "a"))))
                                        )),
                                     (Base (Ident "c"))))
                                  ))
                               ))
                            (Base (Float "0.5"))
                                INFER
                                (FCall ((Base (Ident "**")),
                                   (FCall (
                                      (FCall ((Base (Ident "+")),
                                         (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                            (Base (Float "2.0"))))
                                         )),
                                      (FCall (
                                         (FCall ((Base (Ident "*")),
                                            (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                               (Base (Ident "a"))))
                                            )),
                                         (Base (Ident "c"))))
                                      ))
                                   ))
                                FCALL
                                (Base (Ident "**"))
                                (FCall (
                                   (FCall ((Base (Ident "+")),
                                      (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                         (Base (Float "2.0"))))
                                      )),
                                   (FCall (
                                      (FCall ((Base (Ident "*")),
                                         (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                            (Base (Ident "a"))))
                                         )),
                                      (Base (Ident "c"))))
                                   ))
                                    INFER
                                    (Base (Ident "**"))
                                    INFER RES:
                                    (Base (Ident "**"))
                                    :
                                    ∀12_t, (12_t) -> ((12_t) -> (12_t))
                                    INFER
                                    (FCall (
                                       (FCall ((Base (Ident "+")),
                                          (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                             (Base (Float "2.0"))))
                                          )),
                                       (FCall (
                                          (FCall ((Base (Ident "*")),
                                             (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                (Base (Ident "a"))))
                                             )),
                                          (Base (Ident "c"))))
                                       ))
                                    FCALL
                                    (FCall ((Base (Ident "+")),
                                       (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                          (Base (Float "2.0"))))
                                       ))
                                    (FCall (
                                       (FCall ((Base (Ident "*")),
                                          (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                             (Base (Ident "a"))))
                                          )),
                                       (Base (Ident "c"))))
                                        INFER
                                        (FCall ((Base (Ident "+")),
                                           (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                              (Base (Float "2.0"))))
                                           ))
                                        FCALL
                                        (Base (Ident "+"))
                                        (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                           (Base (Float "2.0"))))
                                            INFER
                                            (Base (Ident "+"))
                                            INFER RES:
                                            (Base (Ident "+"))
                                            :
                                            ∀8_t, (8_t) -> ((8_t) -> (8_t))
                                            INFER
                                            (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                               (Base (Float "2.0"))))
                                            FCALL
                                            (FCall ((Base (Ident "**")), (Base (Ident "b"))))
                                            (Base (Float "2.0"))
                                                INFER
                                                (FCall ((Base (Ident "**")), (Base (Ident "b"))))
                                                FCALL
                                                (Base (Ident "**"))
                                                (Base (Ident "b"))
                                                    INFER
                                                    (Base (Ident "**"))
                                                    INFER RES:
                                                    (Base (Ident "**"))
                                                    :
                                                    ∀12_t, (12_t) -> ((12_t) -> (12_t))
                                                    INFER
                                                    (Base (Ident "b"))
                                                    INFER RES:
                                                    (Base (Ident "b"))
                                                    :
                                                    float
                                                INST r. : ($m9) -> (($m9) -> ($m9))
                                                INST l. : float
                                                    UNIFY
                                                    $m9
                                                    float
                                                    META
                                                    UNIFY RESULT:
                                                    { metas = [("$m9", (TSBase "float"))] }
                                                    float
                                                INFER RES:
                                                (FCall ((Base (Ident "**")), (Base (Ident "b"))))
                                                :
                                                (float) -> (float)
                                                INFER
                                                (Base (Float "2.0"))
                                                INFER RES:
                                                (Base (Float "2.0"))
                                                :
                                                float
                                            INST r. : (float) -> (float)
                                            INST l. : float
                                                UNIFY
                                                float
                                                float
                                                BASE
                                                UNIFY RESULT:
                                                { metas = [] }
                                                float
                                            INFER RES:
                                            (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                               (Base (Float "2.0"))))
                                            :
                                            float
                                        INST r. : ($m8) -> (($m8) -> ($m8))
                                        INST l. : float
                                            UNIFY
                                            $m8
                                            float
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m8", (TSBase "float"))] }
                                            float
                                        INFER RES:
                                        (FCall ((Base (Ident "+")),
                                           (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                              (Base (Float "2.0"))))
                                           ))
                                        :
                                        (float) -> (float)
                                        INFER
                                        (FCall (
                                           (FCall ((Base (Ident "*")),
                                              (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                 (Base (Ident "a"))))
                                              )),
                                           (Base (Ident "c"))))
                                        FCALL
                                        (FCall ((Base (Ident "*")),
                                           (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                              (Base (Ident "a"))))
                                           ))
                                        (Base (Ident "c"))
                                            INFER
                                            (FCall ((Base (Ident "*")),
                                               (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                  (Base (Ident "a"))))
                                               ))
                                            FCALL
                                            (Base (Ident "*"))
                                            (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                               (Base (Ident "a"))))
                                                INFER
                                                (Base (Ident "*"))
                                                INFER RES:
                                                (Base (Ident "*"))
                                                :
                                                ∀11_t, (11_t) -> ((11_t) -> (11_t))
                                                INFER
                                                (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                   (Base (Ident "a"))))
                                                FCALL
                                                (FCall ((Base (Ident "*")), (Base (Float "4.0"))))
                                                (Base (Ident "a"))
                                                    INFER
                                                    (FCall ((Base (Ident "*")), (Base (Float "4.0"))))
                                                    FCALL
                                                    (Base (Ident "*"))
                                                    (Base (Float "4.0"))
                                                        INFER
                                                        (Base (Ident "*"))
                                                        INFER RES:
                                                        (Base (Ident "*"))
                                                        :
                                                        ∀11_t, (11_t) -> ((11_t) -> (11_t))
                                                        INFER
                                                        (Base (Float "4.0"))
                                                        INFER RES:
                                                        (Base (Float "4.0"))
                                                        :
                                                        float
                                                    INST r. : ($m11) -> (($m11) -> ($m11))
                                                    INST l. : float
                                                        UNIFY
                                                        $m11
                                                        float
                                                        META
                                                        UNIFY RESULT:
                                                        { metas = [("$m11", (TSBase "float"))] }
                                                        float
                                                    INFER RES:
                                                    (FCall ((Base (Ident "*")), (Base (Float "4.0"))))
                                                    :
                                                    (float) -> (float)
                                                    INFER
                                                    (Base (Ident "a"))
                                                    INFER RES:
                                                    (Base (Ident "a"))
                                                    :
                                                    float
                                                INST r. : (float) -> (float)
                                                INST l. : float
                                                    UNIFY
                                                    float
                                                    float
                                                    BASE
                                                    UNIFY RESULT:
                                                    { metas = [] }
                                                    float
                                                INFER RES:
                                                (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                   (Base (Ident "a"))))
                                                :
                                                float
                                            INST r. : ($m10) -> (($m10) -> ($m10))
                                            INST l. : float
                                                UNIFY
                                                $m10
                                                float
                                                META
                                                UNIFY RESULT:
                                                { metas = [("$m10", (TSBase "float"))] }
                                                float
                                            INFER RES:
                                            (FCall ((Base (Ident "*")),
                                               (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                  (Base (Ident "a"))))
                                               ))
                                            :
                                            (float) -> (float)
                                            INFER
                                            (Base (Ident "c"))
                                            INFER RES:
                                            (Base (Ident "c"))
                                            :
                                            float
                                        INST r. : (float) -> (float)
                                        INST l. : float
                                            UNIFY
                                            float
                                            float
                                            BASE
                                            UNIFY RESULT:
                                            { metas = [] }
                                            float
                                        INFER RES:
                                        (FCall (
                                           (FCall ((Base (Ident "*")),
                                              (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                 (Base (Ident "a"))))
                                              )),
                                           (Base (Ident "c"))))
                                        :
                                        float
                                    INST r. : (float) -> (float)
                                    INST l. : float
                                        UNIFY
                                        float
                                        float
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        float
                                    INFER RES:
                                    (FCall (
                                       (FCall ((Base (Ident "+")),
                                          (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                             (Base (Float "2.0"))))
                                          )),
                                       (FCall (
                                          (FCall ((Base (Ident "*")),
                                             (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                                (Base (Ident "a"))))
                                             )),
                                          (Base (Ident "c"))))
                                       ))
                                    :
                                    float
                                INST r. : ($m7) -> (($m7) -> ($m7))
                                INST l. : float
                                    UNIFY
                                    $m7
                                    float
                                    META
                                    UNIFY RESULT:
                                    { metas = [("$m7", (TSBase "float"))] }
                                    float
                                INFER RES:
                                (FCall ((Base (Ident "**")),
                                   (FCall (
                                      (FCall ((Base (Ident "+")),
                                         (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                            (Base (Float "2.0"))))
                                         )),
                                      (FCall (
                                         (FCall ((Base (Ident "*")),
                                            (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                               (Base (Ident "a"))))
                                            )),
                                         (Base (Ident "c"))))
                                      ))
                                   ))
                                :
                                (float) -> (float)
                                INFER
                                (Base (Float "0.5"))
                                INFER RES:
                                (Base (Float "0.5"))
                                :
                                float
                            INST r. : (float) -> (float)
                            INST l. : float
                                UNIFY
                                float
                                float
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                float
                            INFER RES:
                            (FCall (
                               (FCall ((Base (Ident "**")),
                                  (FCall (
                                     (FCall ((Base (Ident "+")),
                                        (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                           (Base (Float "2.0"))))
                                        )),
                                     (FCall (
                                        (FCall ((Base (Ident "*")),
                                           (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                              (Base (Ident "a"))))
                                           )),
                                        (Base (Ident "c"))))
                                     ))
                                  )),
                               (Base (Float "0.5"))))
                            :
                            float
                            UNIFY
                            float
                            float
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            float
                     CHECK END
                        INFER
                        (AnnotLet ("nb", (TSBase "float"),
                           (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                              (Base (Ident "b")))),
                           (AnnotLet ("ta", (TSBase "float"),
                              (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                 (Base (Ident "a")))),
                              (Base
                                 (Tuple
                                    [(FCall (
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           )),
                                        (Base (Ident "ta"))));
                                      (FCall (
                                         (FCall ((Base (Ident "/")),
                                            (FCall (
                                               (FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            )),
                                         (Base (Ident "ta"))))
                                      ]))
                              ))
                           ))
                            CHECK
                            (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                               (Base (Ident "b"))))
                            float
                                INFER
                                (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                                   (Base (Ident "b"))))
                                FCALL
                                (FCall ((Base (Ident "-")), (Base (Float "0.0"))))
                                (Base (Ident "b"))
                                    INFER
                                    (FCall ((Base (Ident "-")), (Base (Float "0.0"))))
                                    FCALL
                                    (Base (Ident "-"))
                                    (Base (Float "0.0"))
                                        INFER
                                        (Base (Ident "-"))
                                        INFER RES:
                                        (Base (Ident "-"))
                                        :
                                        ∀9_t, (9_t) -> ((9_t) -> (9_t))
                                        INFER
                                        (Base (Float "0.0"))
                                        INFER RES:
                                        (Base (Float "0.0"))
                                        :
                                        float
                                    INST r. : ($m12) -> (($m12) -> ($m12))
                                    INST l. : float
                                        UNIFY
                                        $m12
                                        float
                                        META
                                        UNIFY RESULT:
                                        { metas = [("$m12", (TSBase "float"))] }
                                        float
                                    INFER RES:
                                    (FCall ((Base (Ident "-")), (Base (Float "0.0"))))
                                    :
                                    (float) -> (float)
                                    INFER
                                    (Base (Ident "b"))
                                    INFER RES:
                                    (Base (Ident "b"))
                                    :
                                    float
                                INST r. : (float) -> (float)
                                INST l. : float
                                    UNIFY
                                    float
                                    float
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    float
                                INFER RES:
                                (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                                   (Base (Ident "b"))))
                                :
                                float
                                UNIFY
                                float
                                float
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                float
                         CHECK END
                            INFER
                            (AnnotLet ("ta", (TSBase "float"),
                               (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                  (Base (Ident "a")))),
                               (Base
                                  (Tuple
                                     [(FCall (
                                         (FCall ((Base (Ident "/")),
                                            (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            )),
                                         (Base (Ident "ta"))));
                                       (FCall (
                                          (FCall ((Base (Ident "/")),
                                             (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                                (Base (Ident "dis"))))
                                             )),
                                          (Base (Ident "ta"))))
                                       ]))
                               ))
                                CHECK
                                (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                   (Base (Ident "a"))))
                                float
                                    INFER
                                    (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                       (Base (Ident "a"))))
                                    FCALL
                                    (FCall ((Base (Ident "*")), (Base (Float "2.0"))))
                                    (Base (Ident "a"))
                                        INFER
                                        (FCall ((Base (Ident "*")), (Base (Float "2.0"))))
                                        FCALL
                                        (Base (Ident "*"))
                                        (Base (Float "2.0"))
                                            INFER
                                            (Base (Ident "*"))
                                            INFER RES:
                                            (Base (Ident "*"))
                                            :
                                            ∀11_t, (11_t) -> ((11_t) -> (11_t))
                                            INFER
                                            (Base (Float "2.0"))
                                            INFER RES:
                                            (Base (Float "2.0"))
                                            :
                                            float
                                        INST r. : ($m13) -> (($m13) -> ($m13))
                                        INST l. : float
                                            UNIFY
                                            $m13
                                            float
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m13", (TSBase "float"))] }
                                            float
                                        INFER RES:
                                        (FCall ((Base (Ident "*")), (Base (Float "2.0"))))
                                        :
                                        (float) -> (float)
                                        INFER
                                        (Base (Ident "a"))
                                        INFER RES:
                                        (Base (Ident "a"))
                                        :
                                        float
                                    INST r. : (float) -> (float)
                                    INST l. : float
                                        UNIFY
                                        float
                                        float
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        float
                                    INFER RES:
                                    (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                       (Base (Ident "a"))))
                                    :
                                    float
                                    UNIFY
                                    float
                                    float
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    float
                             CHECK END
                                INFER
                                (Base
                                   (Tuple
                                      [(FCall (
                                          (FCall ((Base (Ident "/")),
                                             (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                                (Base (Ident "dis"))))
                                             )),
                                          (Base (Ident "ta"))));
                                        (FCall (
                                           (FCall ((Base (Ident "/")),
                                              (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                                 (Base (Ident "dis"))))
                                              )),
                                           (Base (Ident "ta"))))
                                        ]))
                                    INFER
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    FCALL
                                    (FCall ((Base (Ident "/")),
                                       (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                          (Base (Ident "dis"))))
                                       ))
                                    (Base (Ident "ta"))
                                        INFER
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           ))
                                        FCALL
                                        (Base (Ident "/"))
                                        (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                            INFER
                                            (Base (Ident "/"))
                                            INFER RES:
                                            (Base (Ident "/"))
                                            :
                                            ∀10_t, (10_t) -> ((10_t) -> (10_t))
                                            INFER
                                            (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            FCALL
                                            (FCall ((Base (Ident "+")), (Base (Ident "nb"))))
                                            (Base (Ident "dis"))
                                                INFER
                                                (FCall ((Base (Ident "+")), (Base (Ident "nb"))))
                                                FCALL
                                                (Base (Ident "+"))
                                                (Base (Ident "nb"))
                                                    INFER
                                                    (Base (Ident "+"))
                                                    INFER RES:
                                                    (Base (Ident "+"))
                                                    :
                                                    ∀8_t, (8_t) -> ((8_t) -> (8_t))
                                                    INFER
                                                    (Base (Ident "nb"))
                                                    INFER RES:
                                                    (Base (Ident "nb"))
                                                    :
                                                    float
                                                INST r. : ($m15) -> (($m15) -> ($m15))
                                                INST l. : float
                                                    UNIFY
                                                    $m15
                                                    float
                                                    META
                                                    UNIFY RESULT:
                                                    { metas = [("$m15", (TSBase "float"))] }
                                                    float
                                                INFER RES:
                                                (FCall ((Base (Ident "+")), (Base (Ident "nb"))))
                                                :
                                                (float) -> (float)
                                                INFER
                                                (Base (Ident "dis"))
                                                INFER RES:
                                                (Base (Ident "dis"))
                                                :
                                                float
                                            INST r. : (float) -> (float)
                                            INST l. : float
                                                UNIFY
                                                float
                                                float
                                                BASE
                                                UNIFY RESULT:
                                                { metas = [] }
                                                float
                                            INFER RES:
                                            (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            :
                                            float
                                        INST r. : ($m14) -> (($m14) -> ($m14))
                                        INST l. : float
                                            UNIFY
                                            $m14
                                            float
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m14", (TSBase "float"))] }
                                            float
                                        INFER RES:
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           ))
                                        :
                                        (float) -> (float)
                                        INFER
                                        (Base (Ident "ta"))
                                        INFER RES:
                                        (Base (Ident "ta"))
                                        :
                                        float
                                    INST r. : (float) -> (float)
                                    INST l. : float
                                        UNIFY
                                        float
                                        float
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        float
                                    INFER RES:
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    :
                                    float
                                    INFER
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    FCALL
                                    (FCall ((Base (Ident "/")),
                                       (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                          (Base (Ident "dis"))))
                                       ))
                                    (Base (Ident "ta"))
                                        INFER
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           ))
                                        FCALL
                                        (Base (Ident "/"))
                                        (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                            INFER
                                            (Base (Ident "/"))
                                            INFER RES:
                                            (Base (Ident "/"))
                                            :
                                            ∀10_t, (10_t) -> ((10_t) -> (10_t))
                                            INFER
                                            (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            FCALL
                                            (FCall ((Base (Ident "-")), (Base (Ident "nb"))))
                                            (Base (Ident "dis"))
                                                INFER
                                                (FCall ((Base (Ident "-")), (Base (Ident "nb"))))
                                                FCALL
                                                (Base (Ident "-"))
                                                (Base (Ident "nb"))
                                                    INFER
                                                    (Base (Ident "-"))
                                                    INFER RES:
                                                    (Base (Ident "-"))
                                                    :
                                                    ∀9_t, (9_t) -> ((9_t) -> (9_t))
                                                    INFER
                                                    (Base (Ident "nb"))
                                                    INFER RES:
                                                    (Base (Ident "nb"))
                                                    :
                                                    float
                                                INST r. : ($m17) -> (($m17) -> ($m17))
                                                INST l. : float
                                                    UNIFY
                                                    $m17
                                                    float
                                                    META
                                                    UNIFY RESULT:
                                                    { metas = [("$m17", (TSBase "float"))] }
                                                    float
                                                INFER RES:
                                                (FCall ((Base (Ident "-")), (Base (Ident "nb"))))
                                                :
                                                (float) -> (float)
                                                INFER
                                                (Base (Ident "dis"))
                                                INFER RES:
                                                (Base (Ident "dis"))
                                                :
                                                float
                                            INST r. : (float) -> (float)
                                            INST l. : float
                                                UNIFY
                                                float
                                                float
                                                BASE
                                                UNIFY RESULT:
                                                { metas = [] }
                                                float
                                            INFER RES:
                                            (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            :
                                            float
                                        INST r. : ($m16) -> (($m16) -> ($m16))
                                        INST l. : float
                                            UNIFY
                                            $m16
                                            float
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m16", (TSBase "float"))] }
                                            float
                                        INFER RES:
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           ))
                                        :
                                        (float) -> (float)
                                        INFER
                                        (Base (Ident "ta"))
                                        INFER RES:
                                        (Base (Ident "ta"))
                                        :
                                        float
                                    INST r. : (float) -> (float)
                                    INST l. : float
                                        UNIFY
                                        float
                                        float
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        float
                                    INFER RES:
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    :
                                    float
                                INFER RES:
                                (Base
                                   (Tuple
                                      [(FCall (
                                          (FCall ((Base (Ident "/")),
                                             (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                                (Base (Ident "dis"))))
                                             )),
                                          (Base (Ident "ta"))));
                                        (FCall (
                                           (FCall ((Base (Ident "/")),
                                              (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                                 (Base (Ident "dis"))))
                                              )),
                                           (Base (Ident "ta"))))
                                        ]))
                                :
                                (float, float)
                            INFER RES:
                            (AnnotLet ("ta", (TSBase "float"),
                               (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                  (Base (Ident "a")))),
                               (Base
                                  (Tuple
                                     [(FCall (
                                         (FCall ((Base (Ident "/")),
                                            (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            )),
                                         (Base (Ident "ta"))));
                                       (FCall (
                                          (FCall ((Base (Ident "/")),
                                             (FCall ((FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                                (Base (Ident "dis"))))
                                             )),
                                          (Base (Ident "ta"))))
                                       ]))
                               ))
                            :
                            (float, float)
                        INFER RES:
                        (AnnotLet ("nb", (TSBase "float"),
                           (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                              (Base (Ident "b")))),
                           (AnnotLet ("ta", (TSBase "float"),
                              (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                 (Base (Ident "a")))),
                              (Base
                                 (Tuple
                                    [(FCall (
                                        (FCall ((Base (Ident "/")),
                                           (FCall ((FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           )),
                                        (Base (Ident "ta"))));
                                      (FCall (
                                         (FCall ((Base (Ident "/")),
                                            (FCall (
                                               (FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                               (Base (Ident "dis"))))
                                            )),
                                         (Base (Ident "ta"))))
                                      ]))
                              ))
                           ))
                        :
                        (float, float)
                    INFER RES:
                    (AnnotLet ("dis", (TSBase "float"),
                       (FCall (
                          (FCall ((Base (Ident "**")),
                             (FCall (
                                (FCall ((Base (Ident "+")),
                                   (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                      (Base (Float "2.0"))))
                                   )),
                                (FCall (
                                   (FCall ((Base (Ident "*")),
                                      (FCall ((FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                         (Base (Ident "a"))))
                                      )),
                                   (Base (Ident "c"))))
                                ))
                             )),
                          (Base (Float "0.5")))),
                       (AnnotLet ("nb", (TSBase "float"),
                          (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                             (Base (Ident "b")))),
                          (AnnotLet ("ta", (TSBase "float"),
                             (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                                (Base (Ident "a")))),
                             (Base
                                (Tuple
                                   [(FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall (
                                             (FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))));
                                     (FCall (
                                        (FCall ((Base (Ident "/")),
                                           (FCall (
                                              (FCall ((Base (Ident "-")), (Base (Ident "nb")))),
                                              (Base (Ident "dis"))))
                                           )),
                                        (Base (Ident "ta"))))
                                     ]))
                             ))
                          ))
                       ))
                    :
                    (float, float)
                INFER RES:
                (AnnotLam ("c", (TSBase "float"),
                   (AnnotLet ("dis", (TSBase "float"),
                      (FCall (
                         (FCall ((Base (Ident "**")),
                            (FCall (
                               (FCall ((Base (Ident "+")),
                                  (FCall ((FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                     (Base (Float "2.0"))))
                                  )),
                               (FCall (
                                  (FCall ((Base (Ident "*")),
                                     (FCall (
                                        (FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                        (Base (Ident "a"))))
                                     )),
                                  (Base (Ident "c"))))
                               ))
                            )),
                         (Base (Float "0.5")))),
                      (AnnotLet ("nb", (TSBase "float"),
                         (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                            (Base (Ident "b")))),
                         (AnnotLet ("ta", (TSBase "float"),
                            (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                               (Base (Ident "a")))),
                            (Base
                               (Tuple
                                  [(FCall (
                                      (FCall ((Base (Ident "/")),
                                         (FCall (
                                            (FCall ((Base (Ident "+")), (Base (Ident "nb")))),
                                            (Base (Ident "dis"))))
                                         )),
                                      (Base (Ident "ta"))));
                                    (FCall (
                                       (FCall ((Base (Ident "/")),
                                          (FCall (
                                             (FCall ((Base (Ident "-")), (Base (Ident "nb"))
                                                )),
                                             (Base (Ident "dis"))))
                                          )),
                                       (Base (Ident "ta"))))
                                    ]))
                            ))
                         ))
                      ))
                   ))
                :
                (float) -> ((float, float))
            INFER RES:
            (AnnotLam ("b", (TSBase "float"),
               (AnnotLam ("c", (TSBase "float"),
                  (AnnotLet ("dis", (TSBase "float"),
                     (FCall (
                        (FCall ((Base (Ident "**")),
                           (FCall (
                              (FCall ((Base (Ident "+")),
                                 (FCall (
                                    (FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                    (Base (Float "2.0"))))
                                 )),
                              (FCall (
                                 (FCall ((Base (Ident "*")),
                                    (FCall (
                                       (FCall ((Base (Ident "*")), (Base (Float "4.0")))),
                                       (Base (Ident "a"))))
                                    )),
                                 (Base (Ident "c"))))
                              ))
                           )),
                        (Base (Float "0.5")))),
                     (AnnotLet ("nb", (TSBase "float"),
                        (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                           (Base (Ident "b")))),
                        (AnnotLet ("ta", (TSBase "float"),
                           (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                              (Base (Ident "a")))),
                           (Base
                              (Tuple
                                 [(FCall (
                                     (FCall ((Base (Ident "/")),
                                        (FCall (
                                           (FCall ((Base (Ident "+")),
                                              (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                        )),
                                     (Base (Ident "ta"))));
                                   (FCall (
                                      (FCall ((Base (Ident "/")),
                                         (FCall (
                                            (FCall ((Base (Ident "-")),
                                               (Base (Ident "nb")))),
                                            (Base (Ident "dis"))))
                                         )),
                                      (Base (Ident "ta"))))
                                   ]))
                           ))
                        ))
                     ))
                  ))
               ))
            :
            (float) -> ((float) -> ((float, float)))
        INFER RES:
        (AnnotLam ("a", (TSBase "float"),
           (AnnotLam ("b", (TSBase "float"),
              (AnnotLam ("c", (TSBase "float"),
                 (AnnotLet ("dis", (TSBase "float"),
                    (FCall (
                       (FCall ((Base (Ident "**")),
                          (FCall (
                             (FCall ((Base (Ident "+")),
                                (FCall (
                                   (FCall ((Base (Ident "**")), (Base (Ident "b")))),
                                   (Base (Float "2.0"))))
                                )),
                             (FCall (
                                (FCall ((Base (Ident "*")),
                                   (FCall (
                                      (FCall ((Base (Ident "*")),
                                         (Base (Float "4.0")))),
                                      (Base (Ident "a"))))
                                   )),
                                (Base (Ident "c"))))
                             ))
                          )),
                       (Base (Float "0.5")))),
                    (AnnotLet ("nb", (TSBase "float"),
                       (FCall ((FCall ((Base (Ident "-")), (Base (Float "0.0")))),
                          (Base (Ident "b")))),
                       (AnnotLet ("ta", (TSBase "float"),
                          (FCall ((FCall ((Base (Ident "*")), (Base (Float "2.0")))),
                             (Base (Ident "a")))),
                          (Base
                             (Tuple
                                [(FCall (
                                    (FCall ((Base (Ident "/")),
                                       (FCall (
                                          (FCall ((Base (Ident "+")),
                                             (Base (Ident "nb")))),
                                          (Base (Ident "dis"))))
                                       )),
                                    (Base (Ident "ta"))));
                                  (FCall (
                                     (FCall ((Base (Ident "/")),
                                        (FCall (
                                           (FCall ((Base (Ident "-")),
                                              (Base (Ident "nb")))),
                                           (Base (Ident "dis"))))
                                        )),
                                     (Base (Ident "ta"))))
                                  ]))
                          ))
                       ))
                    ))
                 ))
              ))
           ))
        :
        (float) -> ((float) -> ((float) -> ((float, float))))
        UNIFY
        (float) -> ((float) -> ((float) -> ((float, float))))
        (float) -> ((float) -> ((float) -> ((float, float))))
        MAP
            UNIFY
            float
            float
            BASE
            UNIFY RESULT:
            { metas = [] }
            float
            UNIFY
            (float) -> ((float) -> ((float, float)))
            (float) -> ((float) -> ((float, float)))
            MAP
                UNIFY
                float
                float
                BASE
                UNIFY RESULT:
                { metas = [] }
                float
                UNIFY
                (float) -> ((float, float))
                (float) -> ((float, float))
                MAP
                    UNIFY
                    float
                    float
                    BASE
                    UNIFY RESULT:
                    { metas = [] }
                    float
                    UNIFY
                    (float, float)
                    (float, float)
                    TUPLE
                        UNIFY
                        float
                        float
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        float
                        UNIFY
                        float
                        float
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        float
                    UNIFY RESULT:
                    { metas = [] }
                    (float, float)
                UNIFY RESULT:
                { metas = [] }
                (float) -> ((float, float))
            UNIFY RESULT:
            { metas = [] }
            (float) -> ((float) -> ((float, float)))
        UNIFY RESULT:
        { metas = [] }
        (float) -> ((float) -> ((float) -> ((float, float))))
 CHECK END
    CHECK
    (AnnotLam ("n", (TSBase "int"),
       (IfElse (
          (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
             (Base (Int "0")))),
          (Base (Ident "n")),
          (IfElse (
             (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                (Base (Int "1")))),
             (Base (Ident "n")),
             (FCall (
                (FCall ((Base (Ident "+")),
                   (FCall ((Base (Ident "fib")),
                      (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                         (Base (Int "1"))))
                      ))
                   )),
                (FCall ((Base (Ident "fib")),
                   (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                      (Base (Int "2"))))
                   ))
                ))
             ))
          ))
       ))
    (int) -> (int)
        INFER
        (AnnotLam ("n", (TSBase "int"),
           (IfElse (
              (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                 (Base (Int "0")))),
              (Base (Ident "n")),
              (IfElse (
                 (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                    (Base (Int "1")))),
                 (Base (Ident "n")),
                 (FCall (
                    (FCall ((Base (Ident "+")),
                       (FCall ((Base (Ident "fib")),
                          (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                             (Base (Int "1"))))
                          ))
                       )),
                    (FCall ((Base (Ident "fib")),
                       (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                          (Base (Int "2"))))
                       ))
                    ))
                 ))
              ))
           ))
            INFER
            (IfElse (
               (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "0"))
                  )),
               (Base (Ident "n")),
               (IfElse (
                  (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                     (Base (Int "1")))),
                  (Base (Ident "n")),
                  (FCall (
                     (FCall ((Base (Ident "+")),
                        (FCall ((Base (Ident "fib")),
                           (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                              (Base (Int "1"))))
                           ))
                        )),
                     (FCall ((Base (Ident "fib")),
                        (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                           (Base (Int "2"))))
                        ))
                     ))
                  ))
               ))
                CHECK
                (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "0"))))
                bool
                    INFER
                    (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "0"))))
                    FCALL
                    (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                    (Base (Int "0"))
                        INFER
                        (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                        FCALL
                        (Base (Ident "="))
                        (Base (Ident "n"))
                            INFER
                            (Base (Ident "="))
                            INFER RES:
                            (Base (Ident "="))
                            :
                            ∀13_t, (13_t) -> ((13_t) -> (bool))
                            INFER
                            (Base (Ident "n"))
                            INFER RES:
                            (Base (Ident "n"))
                            :
                            int
                        INST r. : ($m18) -> (($m18) -> (bool))
                        INST l. : int
                            UNIFY
                            $m18
                            int
                            META
                            UNIFY RESULT:
                            { metas = [("$m18", (TSBase "int"))] }
                            int
                        INFER RES:
                        (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                        :
                        (int) -> (bool)
                        INFER
                        (Base (Int "0"))
                        INFER RES:
                        (Base (Int "0"))
                        :
                        int
                    INST r. : (int) -> (bool)
                    INST l. : int
                        UNIFY
                        int
                        int
                        BASE
                        UNIFY RESULT:
                        { metas = [] }
                        int
                    INFER RES:
                    (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "0"))))
                    :
                    bool
                    UNIFY
                    bool
                    bool
                    BASE
                    UNIFY RESULT:
                    { metas = [] }
                    bool
             CHECK END
                INFER
                (Base (Ident "n"))
                INFER RES:
                (Base (Ident "n"))
                :
                int
                CHECK
                (IfElse (
                   (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))
                      )),
                   (Base (Ident "n")),
                   (FCall (
                      (FCall ((Base (Ident "+")),
                         (FCall ((Base (Ident "fib")),
                            (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                               (Base (Int "1"))))
                            ))
                         )),
                      (FCall ((Base (Ident "fib")),
                         (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                            (Base (Int "2"))))
                         ))
                      ))
                   ))
                int
                    INFER
                    (IfElse (
                       (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))
                          )),
                       (Base (Ident "n")),
                       (FCall (
                          (FCall ((Base (Ident "+")),
                             (FCall ((Base (Ident "fib")),
                                (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                   (Base (Int "1"))))
                                ))
                             )),
                          (FCall ((Base (Ident "fib")),
                             (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                (Base (Int "2"))))
                             ))
                          ))
                       ))
                        CHECK
                        (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))))
                        bool
                            INFER
                            (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))))
                            FCALL
                            (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                            (Base (Int "1"))
                                INFER
                                (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                                FCALL
                                (Base (Ident "="))
                                (Base (Ident "n"))
                                    INFER
                                    (Base (Ident "="))
                                    INFER RES:
                                    (Base (Ident "="))
                                    :
                                    ∀13_t, (13_t) -> ((13_t) -> (bool))
                                    INFER
                                    (Base (Ident "n"))
                                    INFER RES:
                                    (Base (Ident "n"))
                                    :
                                    int
                                INST r. : ($m19) -> (($m19) -> (bool))
                                INST l. : int
                                    UNIFY
                                    $m19
                                    int
                                    META
                                    UNIFY RESULT:
                                    { metas = [("$m19", (TSBase "int"))] }
                                    int
                                INFER RES:
                                (FCall ((Base (Ident "=")), (Base (Ident "n"))))
                                :
                                (int) -> (bool)
                                INFER
                                (Base (Int "1"))
                                INFER RES:
                                (Base (Int "1"))
                                :
                                int
                            INST r. : (int) -> (bool)
                            INST l. : int
                                UNIFY
                                int
                                int
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                int
                            INFER RES:
                            (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))))
                            :
                            bool
                            UNIFY
                            bool
                            bool
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            bool
                     CHECK END
                        INFER
                        (Base (Ident "n"))
                        INFER RES:
                        (Base (Ident "n"))
                        :
                        int
                        CHECK
                        (FCall (
                           (FCall ((Base (Ident "+")),
                              (FCall ((Base (Ident "fib")),
                                 (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                    (Base (Int "1"))))
                                 ))
                              )),
                           (FCall ((Base (Ident "fib")),
                              (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                 (Base (Int "2"))))
                              ))
                           ))
                        int
                            INFER
                            (FCall (
                               (FCall ((Base (Ident "+")),
                                  (FCall ((Base (Ident "fib")),
                                     (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                        (Base (Int "1"))))
                                     ))
                                  )),
                               (FCall ((Base (Ident "fib")),
                                  (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                     (Base (Int "2"))))
                                  ))
                               ))
                            FCALL
                            (FCall ((Base (Ident "+")),
                               (FCall ((Base (Ident "fib")),
                                  (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                     (Base (Int "1"))))
                                  ))
                               ))
                            (FCall ((Base (Ident "fib")),
                               (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))
                                  ))
                               ))
                                INFER
                                (FCall ((Base (Ident "+")),
                                   (FCall ((Base (Ident "fib")),
                                      (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                         (Base (Int "1"))))
                                      ))
                                   ))
                                FCALL
                                (Base (Ident "+"))
                                (FCall ((Base (Ident "fib")),
                                   (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))
                                      ))
                                   ))
                                    INFER
                                    (Base (Ident "+"))
                                    INFER RES:
                                    (Base (Ident "+"))
                                    :
                                    ∀8_t, (8_t) -> ((8_t) -> (8_t))
                                    INFER
                                    (FCall ((Base (Ident "fib")),
                                       (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))
                                          ))
                                       ))
                                    FCALL
                                    (Base (Ident "fib"))
                                    (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))))
                                        INFER
                                        (Base (Ident "fib"))
                                        INFER RES:
                                        (Base (Ident "fib"))
                                        :
                                        (int) -> (int)
                                        INFER
                                        (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))))
                                        FCALL
                                        (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                        (Base (Int "1"))
                                            INFER
                                            (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                            FCALL
                                            (Base (Ident "-"))
                                            (Base (Ident "n"))
                                                INFER
                                                (Base (Ident "-"))
                                                INFER RES:
                                                (Base (Ident "-"))
                                                :
                                                ∀9_t, (9_t) -> ((9_t) -> (9_t))
                                                INFER
                                                (Base (Ident "n"))
                                                INFER RES:
                                                (Base (Ident "n"))
                                                :
                                                int
                                            INST r. : ($m21) -> (($m21) -> ($m21))
                                            INST l. : int
                                                UNIFY
                                                $m21
                                                int
                                                META
                                                UNIFY RESULT:
                                                { metas = [("$m21", (TSBase "int"))] }
                                                int
                                            INFER RES:
                                            (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                            :
                                            (int) -> (int)
                                            INFER
                                            (Base (Int "1"))
                                            INFER RES:
                                            (Base (Int "1"))
                                            :
                                            int
                                        INST r. : (int) -> (int)
                                        INST l. : int
                                            UNIFY
                                            int
                                            int
                                            BASE
                                            UNIFY RESULT:
                                            { metas = [] }
                                            int
                                        INFER RES:
                                        (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))))
                                        :
                                        int
                                    INST r. : (int) -> (int)
                                    INST l. : int
                                        UNIFY
                                        int
                                        int
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        int
                                    INFER RES:
                                    (FCall ((Base (Ident "fib")),
                                       (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "1"))
                                          ))
                                       ))
                                    :
                                    int
                                INST r. : ($m20) -> (($m20) -> ($m20))
                                INST l. : int
                                    UNIFY
                                    $m20
                                    int
                                    META
                                    UNIFY RESULT:
                                    { metas = [("$m20", (TSBase "int"))] }
                                    int
                                INFER RES:
                                (FCall ((Base (Ident "+")),
                                   (FCall ((Base (Ident "fib")),
                                      (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                         (Base (Int "1"))))
                                      ))
                                   ))
                                :
                                (int) -> (int)
                                INFER
                                (FCall ((Base (Ident "fib")),
                                   (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))
                                      ))
                                   ))
                                FCALL
                                (Base (Ident "fib"))
                                (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))))
                                    INFER
                                    (Base (Ident "fib"))
                                    INFER RES:
                                    (Base (Ident "fib"))
                                    :
                                    (int) -> (int)
                                    INFER
                                    (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))))
                                    FCALL
                                    (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                    (Base (Int "2"))
                                        INFER
                                        (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                        FCALL
                                        (Base (Ident "-"))
                                        (Base (Ident "n"))
                                            INFER
                                            (Base (Ident "-"))
                                            INFER RES:
                                            (Base (Ident "-"))
                                            :
                                            ∀9_t, (9_t) -> ((9_t) -> (9_t))
                                            INFER
                                            (Base (Ident "n"))
                                            INFER RES:
                                            (Base (Ident "n"))
                                            :
                                            int
                                        INST r. : ($m22) -> (($m22) -> ($m22))
                                        INST l. : int
                                            UNIFY
                                            $m22
                                            int
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m22", (TSBase "int"))] }
                                            int
                                        INFER RES:
                                        (FCall ((Base (Ident "-")), (Base (Ident "n"))))
                                        :
                                        (int) -> (int)
                                        INFER
                                        (Base (Int "2"))
                                        INFER RES:
                                        (Base (Int "2"))
                                        :
                                        int
                                    INST r. : (int) -> (int)
                                    INST l. : int
                                        UNIFY
                                        int
                                        int
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        int
                                    INFER RES:
                                    (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))))
                                    :
                                    int
                                INST r. : (int) -> (int)
                                INST l. : int
                                    UNIFY
                                    int
                                    int
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    int
                                INFER RES:
                                (FCall ((Base (Ident "fib")),
                                   (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))), (Base (Int "2"))
                                      ))
                                   ))
                                :
                                int
                            INST r. : (int) -> (int)
                            INST l. : int
                                UNIFY
                                int
                                int
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                int
                            INFER RES:
                            (FCall (
                               (FCall ((Base (Ident "+")),
                                  (FCall ((Base (Ident "fib")),
                                     (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                        (Base (Int "1"))))
                                     ))
                                  )),
                               (FCall ((Base (Ident "fib")),
                                  (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                     (Base (Int "2"))))
                                  ))
                               ))
                            :
                            int
                            UNIFY
                            int
                            int
                            BASE
                            UNIFY RESULT:
                            { metas = [] }
                            int
                     CHECK END
                    INFER RES:
                    (IfElse (
                       (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "1"))
                          )),
                       (Base (Ident "n")),
                       (FCall (
                          (FCall ((Base (Ident "+")),
                             (FCall ((Base (Ident "fib")),
                                (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                   (Base (Int "1"))))
                                ))
                             )),
                          (FCall ((Base (Ident "fib")),
                             (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                                (Base (Int "2"))))
                             ))
                          ))
                       ))
                    :
                    int
                    UNIFY
                    int
                    int
                    BASE
                    UNIFY RESULT:
                    { metas = [] }
                    int
             CHECK END
            INFER RES:
            (IfElse (
               (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))), (Base (Int "0"))
                  )),
               (Base (Ident "n")),
               (IfElse (
                  (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                     (Base (Int "1")))),
                  (Base (Ident "n")),
                  (FCall (
                     (FCall ((Base (Ident "+")),
                        (FCall ((Base (Ident "fib")),
                           (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                              (Base (Int "1"))))
                           ))
                        )),
                     (FCall ((Base (Ident "fib")),
                        (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                           (Base (Int "2"))))
                        ))
                     ))
                  ))
               ))
            :
            int
        INFER RES:
        (AnnotLam ("n", (TSBase "int"),
           (IfElse (
              (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                 (Base (Int "0")))),
              (Base (Ident "n")),
              (IfElse (
                 (FCall ((FCall ((Base (Ident "=")), (Base (Ident "n")))),
                    (Base (Int "1")))),
                 (Base (Ident "n")),
                 (FCall (
                    (FCall ((Base (Ident "+")),
                       (FCall ((Base (Ident "fib")),
                          (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                             (Base (Int "1"))))
                          ))
                       )),
                    (FCall ((Base (Ident "fib")),
                       (FCall ((FCall ((Base (Ident "-")), (Base (Ident "n")))),
                          (Base (Int "2"))))
                       ))
                    ))
                 ))
              ))
           ))
        :
        (int) -> (int)
        UNIFY
        (int) -> (int)
        (int) -> (int)
        MAP
            UNIFY
            int
            int
            BASE
            UNIFY RESULT:
            { metas = [] }
            int
            UNIFY
            int
            int
            BASE
            UNIFY RESULT:
            { metas = [] }
            int
        UNIFY RESULT:
        { metas = [] }
        (int) -> (int)
 CHECK END
    CHECK
    (AnnotLam ("()", TSBottom,
       (Join ((FCall ((Base (Ident "show")), (Base (Str "Fib 10:")))),
          (Join (
             (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
             (Join (
                (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))
                   )),
                (LetIn ("q",
                   (FCall (
                      (FCall (
                         (FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                         (Base (Float "5.0")))),
                      (Base (Float "0.0")))),
                   (Join (
                      (FCall (
                         (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                         (TupAccess ((Base (Ident "q")), 0)))),
                      (Join (
                         (FCall (
                            (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                            (TupAccess ((Base (Ident "q")), 1)))),
                         (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                      ))
                   ))
                ))
             ))
          ))
       ))
    (()) -> (())
        INFER
        (AnnotLam ("()", TSBottom,
           (Join ((FCall ((Base (Ident "show")), (Base (Str "Fib 10:")))),
              (Join (
                 (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                    (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                 (Join (
                    (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))
                       )),
                    (LetIn ("q",
                       (FCall (
                          (FCall (
                             (FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                             (Base (Float "5.0")))),
                          (Base (Float "0.0")))),
                       (Join (
                          (FCall (
                             (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                             (TupAccess ((Base (Ident "q")), 0)))),
                          (Join (
                             (FCall (
                                (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                (TupAccess ((Base (Ident "q")), 1)))),
                             (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                          ))
                       ))
                    ))
                 ))
              ))
           ))
            INFER
            (Join ((FCall ((Base (Ident "show")), (Base (Str "Fib 10:")))),
               (Join (
                  (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                     (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                  (Join (
                     (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                     (LetIn ("q",
                        (FCall (
                           (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                              (Base (Float "5.0")))),
                           (Base (Float "0.0")))),
                        (Join (
                           (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                              (TupAccess ((Base (Ident "q")), 0)))),
                           (Join (
                              (FCall (
                                 (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                 (TupAccess ((Base (Ident "q")), 1)))),
                              (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                           ))
                        ))
                     ))
                  ))
               ))
                CHECK
                (FCall ((Base (Ident "show")), (Base (Str "Fib 10:"))))
                ()
                    INFER
                    (FCall ((Base (Ident "show")), (Base (Str "Fib 10:"))))
                    FCALL
                    (Base (Ident "show"))
                    (Base (Str "Fib 10:"))
                        INFER
                        (Base (Ident "show"))
                        INFER RES:
                        (Base (Ident "show"))
                        :
                        ∀7_t, (7_t) -> (())
                        INFER
                        (Base (Str "Fib 10:"))
                        INFER RES:
                        (Base (Str "Fib 10:"))
                        :
                        string
                    INST r. : ($m23) -> (())
                    INST l. : string
                        UNIFY
                        $m23
                        string
                        META
                        UNIFY RESULT:
                        { metas = [("$m23", (TSBase "string"))] }
                        string
                    INFER RES:
                    (FCall ((Base (Ident "show")), (Base (Str "Fib 10:"))))
                    :
                    ()
                    UNIFY
                    ()
                    ()
                    BOT
                    UNIFY RESULT:
                    { metas = [] }
                    ()
             CHECK END
                INFER
                (Join (
                   (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                      (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                   (Join ((FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                      (LetIn ("q",
                         (FCall (
                            (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                               (Base (Float "5.0")))),
                            (Base (Float "0.0")))),
                         (Join (
                            (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                               (TupAccess ((Base (Ident "q")), 0)))),
                            (Join (
                               (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                  (TupAccess ((Base (Ident "q")), 1)))),
                               (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                            ))
                         ))
                      ))
                   ))
                    CHECK
                    (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                       (FCall ((Base (Ident "fib")), (Base (Int "10"))))))
                    ()
                        INFER
                        (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                           (FCall ((Base (Ident "fib")), (Base (Int "10"))))))
                        FCALL
                        (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                        (FCall ((Base (Ident "fib")), (Base (Int "10"))))
                            INFER
                            (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                            FCALL
                            (Base (Ident "$"))
                            (Base (Ident "show"))
                                INFER
                                (Base (Ident "$"))
                                INFER RES:
                                (Base (Ident "$"))
                                :
                                ∀16_t, ∀17_t, ((16_t) -> (17_t)) -> ((16_t) -> (17_t))
                                INFER
                                (Base (Ident "show"))
                                INFER RES:
                                (Base (Ident "show"))
                                :
                                ∀7_t, (7_t) -> (())
                            INST r. : (($m24) -> ($m25)) -> (($m24) -> ($m25))
                            INST l. : ($m26) -> (())
                                UNIFY
                                ($m24) -> ($m25)
                                ($m26) -> (())
                                MAP
                                    UNIFY
                                    $m24
                                    $m26
                                    META
                                    UNIFY RESULT:
                                    { metas = [("$m24", (TSMeta "$m26"))] }
                                    $m26
                                    UNIFY
                                    $m25
                                    ()
                                    META
                                    UNIFY RESULT:
                                    { metas = [("$m25", TSBottom)] }
                                    ()
                                UNIFY RESULT:
                                { metas = [("$m24", (TSMeta "$m26")); ("$m25", TSBottom)] }
                                ($m26) -> (())
                            INFER RES:
                            (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                            :
                            ($m26) -> (())
                            INFER
                            (FCall ((Base (Ident "fib")), (Base (Int "10"))))
                            FCALL
                            (Base (Ident "fib"))
                            (Base (Int "10"))
                                INFER
                                (Base (Ident "fib"))
                                INFER RES:
                                (Base (Ident "fib"))
                                :
                                (int) -> (int)
                                INFER
                                (Base (Int "10"))
                                INFER RES:
                                (Base (Int "10"))
                                :
                                int
                            INST r. : (int) -> (int)
                            INST l. : int
                                UNIFY
                                int
                                int
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                int
                            INFER RES:
                            (FCall ((Base (Ident "fib")), (Base (Int "10"))))
                            :
                            int
                        INST r. : ($m26) -> (())
                        INST l. : int
                            UNIFY
                            $m26
                            int
                            META
                            UNIFY RESULT:
                            { metas = [("$m26", (TSBase "int"))] }
                            int
                        INFER RES:
                        (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                           (FCall ((Base (Ident "fib")), (Base (Int "10"))))))
                        :
                        ()
                        UNIFY
                        ()
                        ()
                        BOT
                        UNIFY RESULT:
                        { metas = [] }
                        ()
                 CHECK END
                    INFER
                    (Join ((FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                       (LetIn ("q",
                          (FCall (
                             (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                (Base (Float "5.0")))),
                             (Base (Float "0.0")))),
                          (Join (
                             (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                (TupAccess ((Base (Ident "q")), 0)))),
                             (Join (
                                (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                   (TupAccess ((Base (Ident "q")), 1)))),
                                (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                             ))
                          ))
                       ))
                        CHECK
                        (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))))
                        ()
                            INFER
                            (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))))
                            FCALL
                            (Base (Ident "show"))
                            (Base (Str "Quadratic x^2 + 5x"))
                                INFER
                                (Base (Ident "show"))
                                INFER RES:
                                (Base (Ident "show"))
                                :
                                ∀7_t, (7_t) -> (())
                                INFER
                                (Base (Str "Quadratic x^2 + 5x"))
                                INFER RES:
                                (Base (Str "Quadratic x^2 + 5x"))
                                :
                                string
                            INST r. : ($m27) -> (())
                            INST l. : string
                                UNIFY
                                $m27
                                string
                                META
                                UNIFY RESULT:
                                { metas = [("$m27", (TSBase "string"))] }
                                string
                            INFER RES:
                            (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))))
                            :
                            ()
                            UNIFY
                            ()
                            ()
                            BOT
                            UNIFY RESULT:
                            { metas = [] }
                            ()
                     CHECK END
                        INFER
                        (LetIn ("q",
                           (FCall (
                              (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                 (Base (Float "5.0")))),
                              (Base (Float "0.0")))),
                           (Join (
                              (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                 (TupAccess ((Base (Ident "q")), 0)))),
                              (Join (
                                 (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                    (TupAccess ((Base (Ident "q")), 1)))),
                                 (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                              ))
                           ))
                            INFER
                            (FCall (
                               (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                  (Base (Float "5.0")))),
                               (Base (Float "0.0"))))
                            FCALL
                            (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                               (Base (Float "5.0"))))
                            (Base (Float "0.0"))
                                INFER
                                (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                   (Base (Float "5.0"))))
                                FCALL
                                (FCall ((Base (Ident "quad")), (Base (Float "1.0"))))
                                (Base (Float "5.0"))
                                    INFER
                                    (FCall ((Base (Ident "quad")), (Base (Float "1.0"))))
                                    FCALL
                                    (Base (Ident "quad"))
                                    (Base (Float "1.0"))
                                        INFER
                                        (Base (Ident "quad"))
                                        INFER RES:
                                        (Base (Ident "quad"))
                                        :
                                        (float) -> ((float) -> ((float) -> ((float, float))))
                                        INFER
                                        (Base (Float "1.0"))
                                        INFER RES:
                                        (Base (Float "1.0"))
                                        :
                                        float
                                    INST r. : (float) -> ((float) -> ((float) -> ((float, float))))
                                    INST l. : float
                                        UNIFY
                                        float
                                        float
                                        BASE
                                        UNIFY RESULT:
                                        { metas = [] }
                                        float
                                    INFER RES:
                                    (FCall ((Base (Ident "quad")), (Base (Float "1.0"))))
                                    :
                                    (float) -> ((float) -> ((float, float)))
                                    INFER
                                    (Base (Float "5.0"))
                                    INFER RES:
                                    (Base (Float "5.0"))
                                    :
                                    float
                                INST r. : (float) -> ((float) -> ((float, float)))
                                INST l. : float
                                    UNIFY
                                    float
                                    float
                                    BASE
                                    UNIFY RESULT:
                                    { metas = [] }
                                    float
                                INFER RES:
                                (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                   (Base (Float "5.0"))))
                                :
                                (float) -> ((float, float))
                                INFER
                                (Base (Float "0.0"))
                                INFER RES:
                                (Base (Float "0.0"))
                                :
                                float
                            INST r. : (float) -> ((float, float))
                            INST l. : float
                                UNIFY
                                float
                                float
                                BASE
                                UNIFY RESULT:
                                { metas = [] }
                                float
                            INFER RES:
                            (FCall (
                               (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                  (Base (Float "5.0")))),
                               (Base (Float "0.0"))))
                            :
                            (float, float)
                            INFER
                            (Join (
                               (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                  (TupAccess ((Base (Ident "q")), 0)))),
                               (Join (
                                  (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                     (TupAccess ((Base (Ident "q")), 1)))),
                                  (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                               ))
                                CHECK
                                (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                   (TupAccess ((Base (Ident "q")), 0))))
                                ()
                                    INFER
                                    (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                       (TupAccess ((Base (Ident "q")), 0))))
                                    FCALL
                                    (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                    (TupAccess ((Base (Ident "q")), 0))
                                        INFER
                                        (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                        FCALL
                                        (Base (Ident "$"))
                                        (Base (Ident "show"))
                                            INFER
                                            (Base (Ident "$"))
                                            INFER RES:
                                            (Base (Ident "$"))
                                            :
                                            ∀16_t, ∀17_t, ((16_t) -> (17_t)) -> ((16_t) -> (17_t))
                                            INFER
                                            (Base (Ident "show"))
                                            INFER RES:
                                            (Base (Ident "show"))
                                            :
                                            ∀7_t, (7_t) -> (())
                                        INST r. : (($m28) -> ($m29)) -> (($m28) -> ($m29))
                                        INST l. : ($m30) -> (())
                                            UNIFY
                                            ($m28) -> ($m29)
                                            ($m30) -> (())
                                            MAP
                                                UNIFY
                                                $m28
                                                $m30
                                                META
                                                UNIFY RESULT:
                                                { metas = [("$m28", (TSMeta "$m30"))] }
                                                $m30
                                                UNIFY
                                                $m29
                                                ()
                                                META
                                                UNIFY RESULT:
                                                { metas = [("$m29", TSBottom)] }
                                                ()
                                            UNIFY RESULT:
                                            { metas = [("$m28", (TSMeta "$m30")); ("$m29", TSBottom)] }
                                            ($m30) -> (())
                                        INFER RES:
                                        (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                        :
                                        ($m30) -> (())
                                        INFER
                                        (TupAccess ((Base (Ident "q")), 0))
                                            INFER
                                            (Base (Ident "q"))
                                            INFER RES:
                                            (Base (Ident "q"))
                                            :
                                            (float, float)
                                        INFER RES:
                                        (TupAccess ((Base (Ident "q")), 0))
                                        :
                                        float
                                    INST r. : ($m30) -> (())
                                    INST l. : float
                                        UNIFY
                                        $m30
                                        float
                                        META
                                        UNIFY RESULT:
                                        { metas = [("$m30", (TSBase "float"))] }
                                        float
                                    INFER RES:
                                    (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                       (TupAccess ((Base (Ident "q")), 0))))
                                    :
                                    ()
                                    UNIFY
                                    ()
                                    ()
                                    BOT
                                    UNIFY RESULT:
                                    { metas = [] }
                                    ()
                             CHECK END
                                INFER
                                (Join (
                                   (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                      (TupAccess ((Base (Ident "q")), 1)))),
                                   (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                                    CHECK
                                    (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                       (TupAccess ((Base (Ident "q")), 1))))
                                    ()
                                        INFER
                                        (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                           (TupAccess ((Base (Ident "q")), 1))))
                                        FCALL
                                        (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                        (TupAccess ((Base (Ident "q")), 1))
                                            INFER
                                            (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                            FCALL
                                            (Base (Ident "$"))
                                            (Base (Ident "show"))
                                                INFER
                                                (Base (Ident "$"))
                                                INFER RES:
                                                (Base (Ident "$"))
                                                :
                                                ∀16_t, ∀17_t, ((16_t) -> (17_t)) -> ((16_t) -> (17_t))
                                                INFER
                                                (Base (Ident "show"))
                                                INFER RES:
                                                (Base (Ident "show"))
                                                :
                                                ∀7_t, (7_t) -> (())
                                            INST r. : (($m31) -> ($m32)) -> (($m31) -> ($m32))
                                            INST l. : ($m33) -> (())
                                                UNIFY
                                                ($m31) -> ($m32)
                                                ($m33) -> (())
                                                MAP
                                                    UNIFY
                                                    $m31
                                                    $m33
                                                    META
                                                    UNIFY RESULT:
                                                    { metas = [("$m31", (TSMeta "$m33"))] }
                                                    $m33
                                                    UNIFY
                                                    $m32
                                                    ()
                                                    META
                                                    UNIFY RESULT:
                                                    { metas = [("$m32", TSBottom)] }
                                                    ()
                                                UNIFY RESULT:
                                                { metas = [("$m31", (TSMeta "$m33")); ("$m32", TSBottom)] }
                                                ($m33) -> (())
                                            INFER RES:
                                            (FCall ((Base (Ident "$")), (Base (Ident "show"))))
                                            :
                                            ($m33) -> (())
                                            INFER
                                            (TupAccess ((Base (Ident "q")), 1))
                                                INFER
                                                (Base (Ident "q"))
                                                INFER RES:
                                                (Base (Ident "q"))
                                                :
                                                (float, float)
                                            INFER RES:
                                            (TupAccess ((Base (Ident "q")), 1))
                                            :
                                            float
                                        INST r. : ($m33) -> (())
                                        INST l. : float
                                            UNIFY
                                            $m33
                                            float
                                            META
                                            UNIFY RESULT:
                                            { metas = [("$m33", (TSBase "float"))] }
                                            float
                                        INFER RES:
                                        (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                           (TupAccess ((Base (Ident "q")), 1))))
                                        :
                                        ()
                                        UNIFY
                                        ()
                                        ()
                                        BOT
                                        UNIFY RESULT:
                                        { metas = [] }
                                        ()
                                 CHECK END
                                    INFER
                                    (FCall ((Base (Ident "show")), (Base (Ident "q"))))
                                    FCALL
                                    (Base (Ident "show"))
                                    (Base (Ident "q"))
                                        INFER
                                        (Base (Ident "show"))
                                        INFER RES:
                                        (Base (Ident "show"))
                                        :
                                        ∀7_t, (7_t) -> (())
                                        INFER
                                        (Base (Ident "q"))
                                        INFER RES:
                                        (Base (Ident "q"))
                                        :
                                        (float, float)
                                    INST r. : ($m34) -> (())
                                    INST l. : (float, float)
                                        UNIFY
                                        $m34
                                        (float, float)
                                        META
                                        UNIFY RESULT:
                                        { metas = [("$m34", (TSTuple [(TSBase "float"); (TSBase "float")]))] }
                                        (float, float)
                                    INFER RES:
                                    (FCall ((Base (Ident "show")), (Base (Ident "q"))))
                                    :
                                    ()
                                INFER RES:
                                (Join (
                                   (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                      (TupAccess ((Base (Ident "q")), 1)))),
                                   (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                                :
                                ()
                            INFER RES:
                            (Join (
                               (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                  (TupAccess ((Base (Ident "q")), 0)))),
                               (Join (
                                  (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                     (TupAccess ((Base (Ident "q")), 1)))),
                                  (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                               ))
                            :
                            ()
                        INFER RES:
                        (LetIn ("q",
                           (FCall (
                              (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                 (Base (Float "5.0")))),
                              (Base (Float "0.0")))),
                           (Join (
                              (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                 (TupAccess ((Base (Ident "q")), 0)))),
                              (Join (
                                 (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                    (TupAccess ((Base (Ident "q")), 1)))),
                                 (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                              ))
                           ))
                        :
                        ()
                    INFER RES:
                    (Join ((FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                       (LetIn ("q",
                          (FCall (
                             (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                                (Base (Float "5.0")))),
                             (Base (Float "0.0")))),
                          (Join (
                             (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                (TupAccess ((Base (Ident "q")), 0)))),
                             (Join (
                                (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                   (TupAccess ((Base (Ident "q")), 1)))),
                                (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                             ))
                          ))
                       ))
                    :
                    ()
                INFER RES:
                (Join (
                   (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                      (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                   (Join ((FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                      (LetIn ("q",
                         (FCall (
                            (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                               (Base (Float "5.0")))),
                            (Base (Float "0.0")))),
                         (Join (
                            (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                               (TupAccess ((Base (Ident "q")), 0)))),
                            (Join (
                               (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                  (TupAccess ((Base (Ident "q")), 1)))),
                               (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                            ))
                         ))
                      ))
                   ))
                :
                ()
            INFER RES:
            (Join ((FCall ((Base (Ident "show")), (Base (Str "Fib 10:")))),
               (Join (
                  (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                     (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                  (Join (
                     (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x")))),
                     (LetIn ("q",
                        (FCall (
                           (FCall ((FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                              (Base (Float "5.0")))),
                           (Base (Float "0.0")))),
                        (Join (
                           (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                              (TupAccess ((Base (Ident "q")), 0)))),
                           (Join (
                              (FCall (
                                 (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                 (TupAccess ((Base (Ident "q")), 1)))),
                              (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                           ))
                        ))
                     ))
                  ))
               ))
            :
            ()
        INFER RES:
        (AnnotLam ("()", TSBottom,
           (Join ((FCall ((Base (Ident "show")), (Base (Str "Fib 10:")))),
              (Join (
                 (FCall ((FCall ((Base (Ident "$")), (Base (Ident "show")))),
                    (FCall ((Base (Ident "fib")), (Base (Int "10")))))),
                 (Join (
                    (FCall ((Base (Ident "show")), (Base (Str "Quadratic x^2 + 5x"))
                       )),
                    (LetIn ("q",
                       (FCall (
                          (FCall (
                             (FCall ((Base (Ident "quad")), (Base (Float "1.0")))),
                             (Base (Float "5.0")))),
                          (Base (Float "0.0")))),
                       (Join (
                          (FCall (
                             (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                             (TupAccess ((Base (Ident "q")), 0)))),
                          (Join (
                             (FCall (
                                (FCall ((Base (Ident "$")), (Base (Ident "show")))),
                                (TupAccess ((Base (Ident "q")), 1)))),
                             (FCall ((Base (Ident "show")), (Base (Ident "q"))))))
                          ))
                       ))
                    ))
                 ))
              ))
           ))
        :
        (()) -> (())
        UNIFY
        (()) -> (())
        (()) -> (())
        MAP
            UNIFY
            ()
            ()
            BOT
            UNIFY RESULT:
            { metas = [] }
            ()
            UNIFY
            ()
            ()
            BOT
            UNIFY RESULT:
            { metas = [] }
            ()
        UNIFY RESULT:
        { metas = [] }
        (()) -> (())
 CHECK END

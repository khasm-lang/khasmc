type token =
    WHILE
  | T_STRING of string
  | T_INT of string
  | T_IDENT of string
  | T_FLOAT of string
  | TS_TO
  | TRUE
  | TILDE_OP of string
  | TILDE
  | THEN
  | SUB_OP of string
  | SUB
  | STRAIGHT
  | SLASH
  | SIG
  | SEMICOLON
  | RPAREN
  | RETURN
  | RBRACK
  | RBRACE
  | QMARK
  | POW_OP of string
  | PIP_OP of string
  | PERCENT
  | NOMANGLE
  | MUL_OP of string
  | MUL
  | MOD_OP of string
  | LT_OP of string
  | LT
  | LPAREN
  | LOR
  | LET
  | LBRACK
  | LBRACE
  | LAND
  | INLINE
  | IN
  | IGNORE
  | IF
  | HASH
  | GT_OP of string
  | GT
  | FORALL
  | FOR
  | FALSE
  | EQ_OP of string
  | EQ
  | EOF
  | ELSE
  | DOT
  | DOL_OP of string
  | DOLLAR
  | DIV_OP of string
  | COMMA
  | COL_OP of string
  | COLON
  | CAR_OP of string
  | BSLASH
  | BANG_OP of string
  | BANG
  | AT_OP of string
  | AT
  | AND_OP of string
  | AND
  | ADD_OP of string
  | ADD
val menhir_begin_marker : int
val xv_typesig_i : Ast.typesig
val xv_typesig : Ast.typesig
val xv_toplevel : Ast.toplevel
val xv_tdecl : Ast.tdecl
val xv_separated_nonempty_list_COMMA_typesig_ : Ast.typesig list
val xv_separated_nonempty_list_COMMA_expr_ : Ast.kexpr list
val xv_program : Ast.program
val xv_parenexpr : Ast.kexpr
val xv_nonempty_list_toplevel_ : Ast.toplevel list
val xv_nonempty_list_parenexpr_ : Ast.kexpr list
val xv_nonempty_list_T_IDENT_ : string list
val xv_list_T_IDENT_ : string list
val xv_ktype : Ast.ktype
val xv_fexpr : Ast.kexpr
val xv_expr9 : Ast.kexpr
val xv_expr8 : Ast.kexpr
val xv_expr7 : Ast.kexpr
val xv_expr6 : Ast.kexpr
val xv_expr5 : Ast.kexpr
val xv_expr4 : Ast.kexpr
val xv_expr3 : Ast.kexpr
val xv_expr2 : Ast.kexpr
val xv_expr12 : Ast.kexpr
val xv_expr11 : Ast.kexpr
val xv_expr10 : Ast.kexpr
val xv_expr1 : Ast.kexpr
val xv_expr : Ast.kexpr
val xv_base : Ast.kbase
val xv_assign : Ast.kass
val menhir_end_marker : int
